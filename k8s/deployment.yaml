apiVersion: v1
kind: ServiceAccount
metadata:
  name: resource-advisor
  namespace: default
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: resource-advisor-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["list", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: resource-advisor-binding
subjects:
- kind: ServiceAccount
  name: resource-advisor
  namespace: default
roleRef:
  kind: ClusterRole
  name: resource-advisor-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-advisor
  labels:
    app: resource-advisor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-advisor
  template:
    metadata:
      labels:
        app: resource-advisor
    spec:
      serviceAccountName: resource-advisor
      containers:
      - name: main
        image: resource-advisor:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: PROMETHEUS_URL
          value: "http://prometheus-k8s.monitoring:9090"  # Prometheus adresi
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: resource-advisor-service
spec:
  selector:
    app: resource-advisor
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000